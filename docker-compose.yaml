networks:
  innerNetwork:
    driver: ${NETWORKS_DRIVER}

services:
  backend:
    build:
      context: .
    environment:
      TZ: ${TZ}
      DATABASE_URL: postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@database:5432/${DATABASE_NAME}
    volumes:
      - ${DATA_PATH}:/data
    ports:
      - "${PORT}:8000"
    env_file:
      - .env

  database:
    image: postgres:16
    privileged: true
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - ${DATA_PATH}/db:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"
    networks:
      - innerNetwork
    deploy:
      resources:
        limits:
          memory: ${LIMIT_MEMORY_DATABASE}
    restart: always
    env_file:
      - .env

  redis:
    image: redis:5.0
    environment:
      - TZ=${TZ}
    privileged: true
    volumes:
      - ${DATA_PATH}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - innerNetwork
    deploy:
      resources:
        limits:
          memory: ${LIMIT_MEMORY_REDIS}
    restart: always
    env_file:
      - .env
